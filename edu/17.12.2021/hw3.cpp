#include <iostream>
#include <cmath>
// 1) написать функцию сортировки массива.
// На вход подаётся массив и длина, функция сортирует (выбрать любую сортировку) и выводит отсортированный массив.

// Ещё одна задача: написать функцию (целочисленную)  нахождения индекса введённой переменной из отсортированного массива.
// На вход подаётся: длина массива и переменная. (По условию сделаем так, что переменная находится в массиве 100 проц).

// Особенность: проход по всему массиву с нулевого эт-та не эффективно)
// Думай как по-другому найти индекс эл-та.
// Подсказка: всегда можно отсекать половину)

// #include <ctime>

using namespace std;

void insertion(int arr[100], int l);
void printarr(int arr[100], int l);

int main()
{
    int arr[100];
    int l(0), buff(0);
    cout << "Insert array lenght: ";
    cin >> l;

    for (int i = 0; i < l; i++)
    {
        arr[i] = rand() % 100;
        cout << arr[i] << " ";
    }

    insertion(arr, l);
    printarr(arr, l);
}

void insertion(int arr[100], int l)
{
    // сортировка вставками
    // В данном методе мы делим массив на 2 части, сортированую и нет
    // после чего присваиваем сортированй части первое значение массива
    // далее мы берем n+1 индекс и присваем ему значение key (заданное как n+1)
    // если инде

/*
входные данные: 41 67 34 0 69

пока у нас есть длинна массива -1 мы делаем:

буфер1 = 67 (arr[i] значение)
буфер2 = 0 (i-1 индекс)

пока индекс буфера2 (0) больше или равно нулю и значение массива с индексом буфера2 (arr[0]) больше значения буфера1 (arr[i])
мы присваиваем индексу буфер2+1 значение буфер2
массив приобретает вид 41 67 34 0 69

далее уменьшаем буфер2 на единицу
бфуер2 = i-1-1 = 0
далее присва

сравниваем значение с индексом 1 и все

41 67 34 0 69

i = 2
key = 34
j = 1

while
arr[j+1] = arr[j] = 41 34 67 0 69
j = 0
arr j+1 = key = 34

т.к. arr[j / 41] > key34 цикл перестановки выполняется еще раз.

*/

    int key(0); // перменная для хранения n+1 элемента перебираемого массива
    int j(0);   // переменная для хранения n элемента массива

    for (int i = 1; i < l; i++) // пока индес, меньше чем длинна массива выполняется цикл
    {
        key = arr[i];                  //задаем первому буферу переменную под индексом n+1
        j = i - 1;                     // задаем второму буферу индекс n
        while (j >= 0 && arr[j] > key) //пока индекс больше или равен 0 и элемент массива с этим индесом больше чем следующий элемент (key = n+1)
        {
            arr[j + 1] = arr[j]; //присваиваем переменную n+1 на n
            j--;                 //
            arr[j + 1] = key;    //присваиваем индексу n+1 значение n+1
        }
    }
}

void printarr(int arr[100], int l)
{

    cout << endl
         << "Print array: "
         << endl;

    for (int i = 0; i < l; i++)
    {
        cout << arr[i] << " ";
    }
}